set verbose off
clear
set assert stop

include "./src/Threshold_Panel.inp" --force
include assertion.gfn


bundles Params = null
Params = Params + _(r = {0.1}, thresh = {0.09, 0.2, 1,2}',\
                    rexo = {0.09, 0.2, 1,2}',
                    expected = {0.09, 0; 0, 0.2; 0, 1; 0, 2}\
                    )
Params = Params + _(r = {0.1, 0.6}, thresh = {0.09, 0.2, 1,2}',\
                    rexo = {0.09, 0.2, 1,2}',
                    expected = {0.09, 0, 0; 0, 0.2, 0; 0, 0, 1; 0, 0, 2}\
                    )
Params = Params + _(r = {0.1, 0.6}, thresh = {0.09, 0.2, 1,2}',\
                    rexo = {0.09, 0.2, 1.2, 2.2}' ~ {-0.4, 1.1, 0.59, 2.2}',\
                    expected = {0.09, 0, 0, 0, -0.4, 0, 0, 0, 0, 0.2, 0, 0,\
                                0, 1.1, 0, 0, 0, 0, 1.2, 2.2, 0, 0, 0.59, 2.2}\
                    )

function void test_get_interaction_terms (const bundles P)
    print "Start testing get_interaction_terms()."

    loop foreach i P
        print i
        # Given
        expected = vec(P[i].expected)

        # When
        matrix actual = get_interaction_terms(P[i].r, P[i].thresh, P[i].rexo)
        actual = vec(actual)

        # Then
        assert(rows(actual) == rows(expected))
        loop j=1..rows(actual)
            assert_almost_equal_num(actual[j], expected[j], 1e-3)
        endloop
    endloop
end function
test_get_interaction_terms(Params)





# Run sample script
#=============================
open "./src/ThresholdPanel_data_joe99.gdt" --quiet --preserve

# Define a panel dataset + provide meaningful series names
setobs 15 1:1 --stacked-time-series
rename v1 inva
rename v2 vala
rename v3 cfa
rename v4 debta

# Set up the series of interest
list exo = vala debta
list exo1 = lags(1, exo)
list rexo = cfa
list rexo1 = lags(1, rexo)
series thresh = debta(-1)
list Lall = inva exo1 rexo1 thresh

# Shrink dataset for illustration purpose only
smpl 1:01 8:15

# Make sure you have a balanced dataset
smpl Lall --balanced --no-missing

loop i=1..2

    # Run the procedure with values to minimize computation time
    bundle opts = _(nthresholds = $i,\
                    nboot = 49,\
                    nquantiles = 29)
    bundle Model = estimateTpm(inva, exo1, rexo1, thresh, opts)

    plotTpm(Model)
endloop
printf "\nInfo: All tests passed.\n"
