This package is an implementation of Bruce E. Hansen's panel-threshold model.

Reference:
"Threshold effects in non-dynamic panels: Estimation, testing, and inference",
published in Journal of Econometrics 93 (1999) 345-368.
URL: http://www.ssc.wisc.edu/~bhansen/progs/joe_99.html



Public functions
=================

estimateTpm(endo, exo, rexo, thresh, opts[null])
-------------------------------------------------
Estimate the model.

Parameters:
endo         - series, endogenous series
exo          - list, regime-independent regressors
rexo         - list, regime-dependent exogenous (currently only single
               entry supported)
thresh       - series, threshold variable
opts         - bundle, Configure estimation parameters (optional)

Returns: Bundle comprising various information.


plotTpm(model, path[null])
---------------------------
Plot the evaluated thresholds.

Parameters:
model        - bundle, returned bundle from estimateTpm() function
path         - string, Directory where to store plots (optional). If not
               specified, plots appear immediately on screen. If specified,
               the figure(s) will be named "ThresholdPanel_CI_No=X.png"
               where X refers to the number of thresholds.

Returns: Nothing


Default model and estimation values
===================================
The following default parameters are set:

- nthresholds = 1:          Number of thresholds, default: 1
- with_timeeffects = TRUE:  Estimate model with time-effects, default: TRUE
- nquantiles = 200:         Number of quantiles to analyze, default: 200
- nboot = 299:              Number of bootstrap replications, default: 299
- trimming_values = vec({0.01, 0.01, 0.05}): Percentages to trim the
                                             sample start and end for each
                                             of max. three thresholds.
- alpha = 0.5:              Choose a rather high value if you want to
                            estimate the refinement coefficient values.
- confidence_level = 0.95:  Level of confidence for threshold estimates

The "opts" parameter bundle
============================
The user can pass various parameters to estimateTpm() to over-write the
default values listed above.
To do so, you simple pass a bundle where the key must match the name of
the parameter you want to replace by a specific value. See the sample script
for an illustration.


Items of the bundle returned after estimation by estimateTpm()
===============================================================
Apart from all parameters set (See section entitled "Default model and
estimation values"), many further information are returned:

N                - Number of cross-section units
T                - Number of  of valid (actually used) observations
NT               - N * T

beta_lin         - matrix, (1+k) by 1 vector of estimated coefficients of
                   linear benchmark model with intercept + k regressors
sehomo_lin       - matrix of OLS S.E. of estimated linear benchmark model
sehet_lin        - matrix of HAC-robust S.E. of estimated linear
                   benchmark model
beta_indep_Tx    - matrix, k by 1 of regime-independent coeff. for model
                   with x regimes
sehet_indep_Tx   - matrix of HAC-robust S.E. of reg.-indep. coeff. for
                   model with x regimes
sehomo_indep_Tx  - matrix of OLS S.E. of reg.-indep. coeff. for model
                   with x regimes
beta_dep_Tx	     - matrix, n by 1 of regime-dependent coeff. for model
                   with x regimes
sehet_dep_Tx     - matrix of HAC-robust S.E. of reg.-dep. coeff. for
                   model with x regimes
sehomo_dep_Tx    - matrix of OLS S.E. of reg.-dep. coeff. for model with
                   x regimes
qq               - matrix, vector of potential threshold values
rhats            - matrix of estimated thresholds for all threshold
                   models (see row names for more details)
lrstats          - matrix, qn by nthresh storing likelihood ratio
                   statistics all threshold values for each model
                   (refinement value if computed)
lrtest           - nr by 1 matrix holding the LR-test statistics for nr
                   threshold models
lrprob           - matrix, nr by 1 holding the bootstrap pvalues of the
                   LR-test for nr threshold models
lrcrit           - matrix, nr by 3 holding the bootstrap critical values:
                   (10pct ~ 5pct ~ 1pct) for nr threshold models
SSE              - matrix of SSEs of linear benchmark|single|double
                   threshold models
R2               - matrix, within R^2 of linear|single|double threshold
                   models (see row names)
DW               - matrix, Durbin-Watson test statistics of
                   linear|single|double threshold models
csdeptes         - matrix, test results on no cross-sectional dependence
                   (test ~ pvalue) for linear|single|double threshold models
sercorr          - matrix, test results on serial corr. (order 1)
                   (test ~ pvalue) for linear|single|double threshold models
hettest          - matrix, test results of no heteroskedasticity
                   (test~pvalue) for linear|single|double threshold models



CHANGELOG:
----------
2.3 (June 2022)
  - Fix bug printing results in case of 3-regime (two thresholds) model.
2.2 (June 2022)
  - Fix mismatch in dimension when calling rnameset().
  - Make sure that coefficient estimates are printed.
  - Internal clean-up: Make use of the built-in serial correlation test
    (by Wooldridge) and get rid of the dependency of the
    "wooldridge_test_serial" package.
  - Increase version requirement to 2021a
2.1 (November 2021)
  - Replace both deprecated functions colnames() and rownames()
2.0 (March 2021)
  - Changed API: Rename function SETUP_THRESH() to estimateTpm() and change
    arguments.
  - Changed API: Rename function lrplot() by plotTpm() and change
    arguments.
  - Replace "stop" by errorif() function.
  - Fix bug in get_interaction_terms() function for constructing
    interaction terms.
  - Make use of hdprod() function for computing interaction terms;
    results in about +20% gain of speed.
  - Internal refactoring and re-formatting (about 5% gain of speed).
  - Update help file.
  - Improve print-out of tests (formatting)
  - Minimum required version is 2020b now.
1.1 (June 2018)
  - Drop "lrcrit" input for lrplot() -- USER must correct their code!
  - 10%/5%/1% critical values for the LR-test on threshold equality
  (h0: gamma=gamm0) are now plotted as in Hansen (1999)
  - minor improvements and fix of a potential bug in THRESH_SETUP()
1.0 (Dez. 2016)
  - Minor corrections
0.923 (Oct. 2016)
  - Total package revamp
  - Now using gretl's internal panel toolbox
0.922 (Mai 2016)
  - Add "sse[qi]= $huge"
0.921 (August 2015)
  - cleaning up the code
  - get rid of the seqa() function
0.92 (August 2015)
  - cleaning up the code
  - solve some bugs which let to collinearity issues
  - speeding-up by vectorizing stuff and using internal functions
  - fix bug in the resampling procedure to bootstrap the test statistics
