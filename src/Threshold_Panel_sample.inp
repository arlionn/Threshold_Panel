set verbose off
clear

/* Replication of Hansen's results in Journal of Econometrics (1999)

 NOTE: Hansen doesn't exploit the whole dataset comprising
 14 time observations (one lost due to lags) but actually only 13 if one
 looks at his code. Hence, our results based on the full unrestricted
 dataset do not fully coincide!
*/

include Threshold_Panel.gfn
open ThresholdPanel_data_joe99.gdt --frompkg=Threshold_Panel

REPLICATE_HANSEN90 = 0  # =1: replicate Hansen's paper, =0: small sample


# Define a panel dataset + provide meaningful series names
setobs 15 1:1 --stacked-time-series
rename v1 inva
rename v2 vala
rename v3 cfa
rename v4 debta

# Set up the series of interest
series vala2 = vala^2
series vala3 = vala^3
series debtval = debta*vala
list exo = vala vala2 vala3 debta debtval
list exo1 = lags(1, exo)
list rexo = cfa
list rexo1 = lags(1, rexo)
series thresh = debta(-1)
list Lall = inva exo1 rexo1 thresh


if REPLICATE_HANSEN90 == 0
    # Shrink dataset for illustration purpose only
    smpl 1:01 8:15

    # Make sure you have a balanced dataset
    smpl Lall --balanced --no-missing

    # Run the procedure with values to minimize computation time
    bundle opts = _(nthresholds = 1,\
                    nboot = 99,\
                    nquantiles = 99)
    set stopwatch
    bundle Model = estimateTpm(inva, exo1, rexo1, thresh, opts)
    printf "\n This took %.2f seconds\n", $stopwatch

    print Model         # print bundle output

    /* Plot the Likelihood Ratio test confidence interval jointly with the
    'no-rejection region' using the LR-statistic for tests on gamma. */
    plotTpm(Model)
endif


if REPLICATE_HANSEN90 != 0
    print "Start replicating Hansen's 1999 results. Better get a coffee..."

    # Make sure you have a balanced dataset
    smpl Lall --balanced --no-missing

    bundle opts = _(\
                    nthresholds = 2,\
                    nboot = 300,\
                    nquantiles = 400,\
                    confidence_level = 0.95,\
                    trimming_values = vec({0.01, 0.01, 0.05}),\
                    with_timeeffects = 1\
                    )

    set stopwatch
    bundle Hansen = estimateTpm(inva, exo1, rexo1, thresh, opts)
    printf "\n This took %.2f seconds\n", $stopwatch
    print Hansen

    plotTpm(Hansen)
endif
